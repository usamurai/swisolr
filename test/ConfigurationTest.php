<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../lib/SwiSolr.php';

SwiSolr::autoload('SolrConfiguration');


/**
 * Test class for Configuration.
 * Generated by PHPUnit on 2009-06-16 at 12:39:09.
 */
class ConfigurationTest extends PHPUnit_Framework_TestCase
{
    
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        Configuration::reset();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testGet().
     */
    public function testGet()
    {
        $defaultServerAddress = 'http://127.0.0.1';
        $serverAddress = Configuration::get('server-address');
        $this->assertNotNull($serverAddress);
        $this->assertEquals($defaultServerAddress, $serverAddress);
    }

    /**
     * @todo Implement testPut().
     */
    public function testPut()
    {
        $newServerAddress = 'http://test.server.com';
        Configuration::put('server-address', $newServerAddress);

        // check that server address is updated
        $serverAddress = Configuration::get('server-address');
        $this->assertNotNull($serverAddress);
        $this->assertEquals($newServerAddress, $serverAddress);
    }

    /**
     * @todo Implement testGetServerUrl().
     */
    public function testGetServerUrl()
    {
        $defaultServerFullUrl = 'http://127.0.0.1:8080/solr';
        $serverUrl = Configuration::getServerUrl();
        $this->assertNotNull($serverUrl);
        $this->assertEquals($defaultServerFullUrl, $serverUrl);
    }

    public function testGetFieldPrioritiesType() {
        $fields = Configuration::getFieldPriorities();
        $this->assertNotNull($fields);
        $this->assertTrue(is_array($fields));
    }

    public function testGetFieldPrioritiesCount() {
        $fields = Configuration::getFieldPriorities();
        $this->assertNotNull($fields);
        $this->assertEquals(2, sizeof($fields));
    }

    public function testGetFieldPrioritiesData() {
        $expectedPriorities = array(
            'title'     => '10.0',
            'content'   => '1.0'
        );

        $fields = Configuration::getFieldPriorities();

        $this->assertNotNull($fields);
        $this->assertEquals($expectedPriorities, $fields);
    }
}
?>
